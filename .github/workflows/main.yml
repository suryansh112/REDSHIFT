name: Redshift-Workflow
on:
  workflow_dispatch:
    inputs:
      command: 
        description: Choose whether to apply or destroy
        required: true
        default: apply
        type: choice
        options:
        - apply
        - destroy
      environments:
        description: Choose Env
        required: true
        type: choice
        default: dev
        options:
        - dev
        - qa
        - prod
      region:
        description: Choose Region
        required: true
        type: choice
        default: us-east-1
        options:
        - ap-south-1
        - us-east-1
env:
  ROLE_NAME : ${{secrets.ROLE_NAME}}
permissions:
  id-token: write   # This is required for requesting the JWT
  contents: read
jobs:
  Create_Redshift_Cluster:
    runs-on: ubuntu-latest
    steps:
    - name: Clone Repo
      uses: actions/checkout@main
    - name: configure aws credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        role-to-assume: ${{secrets.ROLE_NAME}} 
        role-session-name: GitHub_to_AWS_via_FederatedOIDC
        aws-region: ${{ inputs.region }}
    - name: Creating RedShift Cluster
      if: inputs.command == 'apply'
      run: |
           pwd
           terraform init
           terraform plan -var="role=$ROLE_NAME" -var="region=${{inputs.region}}" -var="bucket=${{secrets.bucket_arn}}" -var="github_workspace=${GITHUB_WORKSPACE}"
           terraform ${{inputs.command}} --auto-approve -var="role=$ROLE_NAME" -var="region=${{inputs.region}}" -var="bucket=${{secrets.bucket_arn}}" -var="github_workspace=${GITHUB_WORKSPACE}"
    - name: Destroying Redshift Cluster
      if: inputs.command == 'destroy'
      run: |
           terraform init
           terraform plan -var="role=$ROLE_NAME" -var="region=${{inputs.region}}" -var="bucket=${{secrets.bucket_arn}}" -var="github_workspace=${GITHUB_WORKSPACE}"
           terraform ${{inputs.command}} --auto-approve -var="role=$ROLE_NAME" -var="region=${{inputs.region}}" -var="bucket=${{secrets.bucket_arn}}" -var="github_workspace=${GITHUB_WORKSPACE}"